:import TowerTesting_lib
:name {package(Initialiser)}

key.x()
key.r()

gotoif(\
  if(contains(impulse(), "key.r"), restart, timer), \
  contains("key.r|{package(Initialiser)}", impulse())\
)
global.string.set({hider}, if(\
  {state_get}, \
  "Codrineye's TowerTesting Is Shutdown", \
  concat("Hider Blocker", "</size>")\
))

{state_toggle}
goto(if({state_get}, skip, 99))

skip:
execute("{package(Stats Exit Diff_Change)}")
execute("{package(Movement Manager)}")
executesync("{package(Toggles)}")
waitwhile({state_get} && anyopen() || isTowerTesting())

loop:
waitwhile({state_get} && (isTowerTesting() == false))
execute("{package(Initialiser)}")
waitwhile({state_get} && health(false) > 0.0 && (enemies() > 0 || wave() < 100.0))
exit()
stop("{package(Restart At Will)}")
goto(if({state_get}, loop, 99))

timer:
wait(30.0)

restart:
restart()

