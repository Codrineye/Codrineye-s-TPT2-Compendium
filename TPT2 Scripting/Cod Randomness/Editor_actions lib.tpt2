; Script that defines multiple helper lua functions
; that let you easily build and return large expressions
; by using a lua macro instead of multiple line breaks
; 
; Building expressions in lua can greately improve script
; readability and maintinability if used correctly

{lua(\
  function editor_multiParameterOperation(op_name, ...)\
    --[[/*\
        * root operation definition so these functions are\
        * generated dynamically\
        * \
        * op_name is the operations name, if set to nil\
        * we set op_name to nil if the operation we're making\
        * \
        * string of parameters in function call\
        */]]\
    local is_primitive = op_name == "";\
    parameters = {};\
    for _, value in ipairs(table.pack(...)) do\
      parameters = table.pack(\
        table.concat(parameters), \
        value\
      );\
      if encase then\
        parameters = table.pack(\
          table.concat(parameters), \
          ", "\
        );\
      end\
    end\
    local values = table.concat(parameters);\
    if encase then\
      values = string.format("(%s)", values);\
    end\
    return string.format("%s%s", op_name, values);\
  end\
  \
  local actions = {};\
  actions.operands = table.pack(\
    --[[local/global.data_type.get]] "%s.%s.get", \
    \
    --[[left_arg, op_name, right_arg]] "%s %s %s", \
    --[[comparison/arithmetic.type]] "%s.%s", \
    \
    --[[bools]] "not", "if", \
    \
    --[[strings]]\
    "contains", \
    "len", "index", \
    "concat", "sub", \
    --[[lower/upper]] "%s", \
    \
    --[[floor ceil round sin cos tan asin acos atan atan2]] "%s", \
    --[[min max rnd]] "%s", \
    \
    --[[vec2.x/y]] "vec2.%s", \
    "vec", \
    \
    --[[type conversion]] "%s2%s", \
    \
    --[[UI]] "visibility.get", "child.visibility.get", \
    \
    --[[Town]] "isopen", "resource", \
    \
    --[[.enabled/find]] "software.%s", \
    --[[.health/energy/shield/module.cooldown]] "tower.%s", \
    --[[.wave/era/infinity]] "highscore.%s", \
    "disable.cost", "active.id", \
    \
    --[[worker.paused/group/name/task]] "worker.%s", \
    \
    --[[Arcade Adventure]]\
    --[[countEntities/hasItem/isWall/Bomb/Enemy/Completed/entityType]]\
    "adventure.%s", \
    \
    --[[Factory]]\
    "active", \
    "count", "machine.item.count", \
    "machine.item", "factory.find", \
    \
    --[[Museum]]\
    --[[pref/isLocked/freeSlots/max slot trash Tier/slot trash Elememt]]\
    "museum.%s", \
    "tier", \
    "element"\
  );\
  actions.parameter = {};\
  actions.parameter.count = table.pack(\
    --[[local/global.data_type.get]] 3, \
    \
    --[[math/bool operations]] 3, \
    --[[condition/arithmetic.type]] 4, \
    \
    --[[not, if]] 1, 3, \
    \
    --[[contains]] 2, \
    --[[len, index]] 1, 3, \
    --[[concat, sub]] 2, 3, \
    --[[lower/upper]] 2, \
    \
    --[[floor ceil round sin cos tan asin acos atan atan2]] 2, \
    --[[min max rnd]] 3, \
    \
    --[[vec2.x/y]] 2, \
    --[[vec]] 2, \
    \
    --[[type conversion]] 3, \
    \
    --[[visibility.get child.visibility.get]] 1, 2, \
    --[[isopen, resource]] 1, 1, \
    \
    --[[software.]] 2, \
    --[[tower. highscore.]] 2, 3, \
    --[[disable.cost active.id]] 1, 1, \
    \
    --[[worker.paused/group/name/task]] 2, \
    \
    --[[Arcade Adventure]]\
    --[[adventure.]] 2, \
    \
    --[[Factory]]\
    --[[active]] 1, \
    --[[count machine.item.count]] 2, 1, \
    --[[machine.item factory.find]] 1, 1, \
    \
    --[[Museum]]\
    --[[museum.]] 2, \
    --[[tier]] 2, \
    --[[element]] 2\
  );\
  actions.parameter.names = table.pack(\
    --[[local/global.data_type.get]]\
    "var_type", "data_type", "var_name", \
    --[[math/bool operations]]\
    "left_value", "operator_name", "right_value",\
    --[[primitive operation]] "data_type", \
    \
    --[[not]] "value_to_negate", \
    --[[if]] "condition", "value_case_true", "value_case_false",\
    \
    --[[contains]] "parent_string", "checker_string",\
    --[[len]] "string_value", \
    --[[index]] "parent_string", "checker_string", "offset",\
    --[[concat]] "left_string", "right_string", \
    --[[sub]] "parent_string", "string_offset", "substring_length", \
    --[[lower/upper]] "operation_name", "string_to_manipulate", \
    \
    --[[floor ceil round sin cos tan asin acos atan atan2]]\
    "math_action_name", "action_value",\
    --[[min max rnd]]\
    "math_action_name", "left_value", "right_value",\
    \
    --[[vec2.x/y]] "vector_to_get_value_from",\
    --[[vec]] "vector_coord_x", "vector_coord_y",\
    \
    --[[type conversion]]\
    "type_to_conver_from", "type_to_convert_to", "value_to_convert",\
    --[[for string to value]] "fallback_value",\
    \
    --[[visibility.get]] "window_ID",\
    --[[child.visibility.get]] "window_ID", "element_ID",\
    \
    --[[isopen]] "roomID",\
    --[[resource]] "resourceID",\
    \
    --[[software.]] "operation_name", "software_operation_value",\
    --[[tower.]] "tower_stat", "tower_stat_parameter",\
    --[[highscore.]] "highscore_target", "region", "difficulty",\
    --[[disable.cost]] "element_name",\
    --[[active.id]] "active_spell_name",\
    \
    --[[worker.]] "worker_operation", "worker_ID",\
    --[[adventure.]] "adventure_operation", "operation_request",\
    --[[Factory]] \
    --[[active]] "machine_name",\
    --[[count]] "item_name", "item_tier",\
    --[[machine.item.count]] "machine_name",\
    --[[machine.item]] "machine_name",\
    --[[factory.find]] "item_name",\
    \
    --[[museum.]] "museum_operation", "stone_index",\
    --[[tier]] "target_menu", "target_slot",\
    --[[element]] "target_menu", "target_slot"\
  );\
)}
