; 
; This is a library that declairs the naming scheme
; needed to use the spell compactor
; 

#spell_compactor Spell Compactor

#hider.start <size=0>
#hider.close </size>

:const string hider.start "{hider.start}"
:const string hider.close "{hider.close}"

:const string pointer_var "{hider.start}Spell Compactor Pointer"
#pointer.get global.int.get(pointer_var)
#pointer.set(value) global.int.set(pointer_var, {value})

:const string compactor_string "Spell Compactor access string"
#compactor.get global.string.get(compactor_string)
#compactor.set(string) global.string.set(compactor_string, {string})

:const string caller_ID "{hider.close}Spell Comp caller"
#caller.get global.string.get(caller_ID)
#caller.set(caller_ID) global.string.set(caller_ID, {caller_ID})

:const string timer_var "t"
#timer.get global.double.get(timer_var)
#timer.set(value) global.double.set(timer_var, {value})
#timer.add(value) {timer.set(({value}) + {timer.get})}
