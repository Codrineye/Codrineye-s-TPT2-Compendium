:import example_text library
:name {package(blueprint AI caller)}

; 
; this is a caller script, it
; can be integrated into any
; part of your script, but
; so that you don't have to read
; a novel, and so I don't have to write a novel
; this is what you have to do
; for your blueprint to be executed
; by the spell compactor
; 
; 
; the macro names you see here
; have been declaired inside of
; Spell Compactor Resources
; 

{pointer.set({pointer.get})}

; 
; Set a hiding block for your script, this prevents
; the recording string from being shown on the user interface
; as this string is usually rather large

{compactor.set(recorded_actives)}

; 
; If your AI already has a block hider, you
; could simply remove creating the hide blocker
; If you do not want to close the hide blocker
; you should probably redesign your interface values
; as the block hider is ended in the compactor itself
; 

