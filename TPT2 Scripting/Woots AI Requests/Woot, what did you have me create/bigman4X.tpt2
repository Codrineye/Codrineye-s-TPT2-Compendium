:name bigman4X
:budget_cap 1

key.x()
key.c()

key.i()
key.j()

:const string gift_name '<size=0>gift coord'

:const double gift_slot_1 460.0
:const double gift_slot_2 580.0
:const double gift_slot_3 700.0

:const double gift_coord_y 300.0
:const double rebuy_coord_y 250.0

:const double gift_slot_increment 120.0

:const double combine_slot_1 405.0
:const double combine_slot_2 470.0
:const double combine_slot_3 535.0

:const double combine_slot_increment 65.0


:local double buy_coord
:local double combine_coord

:local string gift_to_buy

:global string buy_gift


global.double.set(gift_name, min(gift_slot_3, max(gift_slot_1, if(\
  contains("key.xkey.c", impulse()),\
  global.double.get(gift_name),\
  if(\
    contains(impulse(), "key.i"), \
    global.double.get(gift_name) + gift_slot_increment, \
    global.double.get(gift_name) - gift_slot_increment\
  )\
))))

buy_coord = global.double.get(gift_name)
combine_coord = combine_slot_1

gift_to_buy = if(buy_coord == gift_slot_1, "red gift", if(\
  buy_coord == gift_slot_2, \
  "green gift", \
  "blue gift"\
))

buy_gift = i2s(25 + len(gift_to_buy)) . "</size>" .\
  "script will buy " . gift_to_buy . if(\
    contains(buy_gift, "<br>"),\
    sub(buy_gift, s2i(sub(buy_gift, 0, 2), 0), 99),\
    ""\
)\

gotoif(99, contains(buy_gift, "<br>") || contains("key.ikey.j", impulse()))

:local int buy
:local int combine

buy_gift = buy_gift . "<br>combining with " . \
  "<color=#000>" . gift_to_buy . "</color>"

buy_loop:

{click.relative(buy_coord / 800.0, gift_coord_y / 450.0, 1.0, 0.5)}
; buy selected gift
{click.relative(490.0 / 800.0, 085.0 / 450.0, 1.0, 0.5)}
; click on the inventory slot
{click.relative(combine_coord / 800.0, 180.0 / 450.0, 1.0, 0.5)}
; put it in slot

; increment our buy count
; this keeps track of how many items we have bought
buy = (buy + 1) % 3

; we also change the location of our combine coord
; since buy can only have 0 1 2, if buy isn't 1 nor 2
; buy == 0, so we must restart to combine_slot_1
combine_coord = if(\
  buy == 1,\
  combine_slot_2,\
  if(buy == 2, combine_slot_3, combine_slot_1)\
)
gotoif(buy_loop, buy > 0)

{click.relative(680.0 / 800.0, 180.0 / 450.0, 1.0, 0.5)}
; we click the button to combine the inbut,
; at the cost of candy cane
{click.relative(600.0 / 800.0, 180.0 / 450.0, 1.0, 0.5)}
; we take the input inside of our combine slot 

gotoif(skip_sell, combine == 2)

{click.relative(410.0 / 800.0, rebuy_coord_y / 450.0, 1.0, 0.5)}
; and we sell it for to make space for the next combine sequence

skip_sell:
combine = (combine + 1) % 3
gotoif(buy_loop, combine > 0)

{click.relative(combine_slot_3 / 800.0, 180.0 / 450.0, 1.0, 0.5)}
; place our combined gift in the third combine slot

{click.relative(695.0 / 800.0, rebuy_coord_y / 450.0, 1.0, 0.5)}
; rebuy our second deleted gift
{click.relative(490.0 / 800.0, 085.0 / 450.0, 1.0, 0.5)}
; rebuying places the item back in our inventory in the last slot
; so we have too click our inventory to sellect it
{click.relative(combine_slot_2 / 800.0, 180.0 / 450.0, 1.0, 0.5)}
; place our combined gift in the second combine slot

{click.relative(785.0 / 800.0, 030.0 / 450.0, 1.0, 1.0)}
; close the snowman store
waitframe()
; wait a frame so our click goes through
{click.relative(785.0 / 800.0, 030.0 / 450.0, 1.0, 1.0)}
; reopen the snowman store

{click.relative(565.0 / 800.0, rebuy_coord_y / 450.0, 1.0, 0.5)}
; rebuy our first deleted item
{click.relative(490.0 / 800.0, 085.0 / 450.0, 1.0, 0.5)}
; click our inventory to grab our rebought item
{click.relative(combine_coord / 800.0, 180.0 / 450.0, 1.0, 0.5)}
; place it in our first combine slot

{click.relative(680.0 / 800.0, 180.0 / 450.0, 1.0, 0.5)}
; click the combine button
{click.relative(600.0 / 800.0, 180.0 / 450.0, 1.0, 0.5)}
; click on our combine result
{click.relative(490.0 / 800.0, 085.0 / 450.0, 1.0, 0.5)}
; place it in our inventory

{click.relative(735.0 / 800.0, 140.0 / 450.0, 1.0, 0.5)}
; and unwrap all presents

; finally, to signal to the script that it's completed, we set
; our instance_running to false

end:
buy_gift = sub(buy_gift, 0, s2i(sub(buy_gift, 0, 2), 0))