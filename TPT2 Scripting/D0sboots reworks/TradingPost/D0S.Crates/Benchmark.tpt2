:import D0S.Crates lib
; Script for benchmarking the efficiency of D0S.Idler_Crates.
; Use this for tuning the loop constant.
;
; Use Full Precision for maximum resolution in benchmarking.

:name {package(Benchmark)}

isopen("tradingpost")

key.{benchmark}()

:local double next_time
:local double end_time
:global int turbo.register

#bench "<size=20><color=white>benchmark"
#bench.get global.string.get({bench})
#bench.set(time) global.string.set({bench}, {time})

#remaining (end_time - next_time)

#seconds(x) (1e7 * {x})

show("tradingpost", false)
show("towertesting", true)
execute("{package(Idler_v2)}")

next_time = now()
end_time = next_time + {seconds(15)}

loop:
waituntil(now() > next_time)
{bench.set("0:"\
  . floor({remaining} / {seconds(10)})\
  . floor({remaining} / {seconds(1)}) % 10.0\
  . "</color></size>"\
)}

next_time += {seconds(1)}
goto(if({trading.get} == "", end, if(next_time <= end_time, loop, cleanup)))

cleanup:
{trading.set({exiting})}
waituntil(gsg({trading}) == "")

end:
{bench.set("final:" . (now() - end_time + {seconds(15)}) / {seconds(1)} . "</color></size>")}
