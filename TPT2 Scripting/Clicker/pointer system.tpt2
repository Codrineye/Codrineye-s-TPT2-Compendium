:import clicker lib
:name {package(pointer system)}

key.{pointer_increase}()
key.{pointer_decrease}()

; 
; we repeat the same first start block as in page system
; we end the process since we're woken up by page system
; 
:local bool initialised
initialised = contains({item.get("shop")}, "</size>")

execute(if(\
  initialised, \
  "{garbage_requested}", \
  "{package(init)}"\
))
gotoif(99, initialised == false)

; we execute page system to not have more than 1 sellection
; a check on the impulse is not needed
; since we're usually always going to execute page system
executesync("{package(page system)}")

; update our pointer according to our impulse
; we have a min value of 0, and a max of {page_size} - 1
{pointer.set(if(\
  contains(impulse(), "{package()}"), \
  {pointer.get}, \
  if(\
    contains(impulse(), "key.{pointer_increase}"), \
    min({pointer.get} + 1, {page_size} - 1), \
    max({pointer.get} - 1, 0)\
  )\
))}

; set up the store for the user to be able to see
; since we always refresh the shop to remove the color
; we can easily call for the item directly, instead of 
; getting a substring of the item
; 
; we convert the input from a string to an int
; and then back to a string so that the player
; sees `cost = 50` instead of `cost = 00000050`
{item.set("item" . {pointer.get}, {pointer} . {item.get("item" . {pointer.get})} . "</color>")}
{item.set("description", {items.substring(\
  {pointer.get}, \
  2, \
  price_displace + name_displace, \
  {items.index({pointer.get}, 2, price_displace + name_displace)}\
)})}
{item.set("effect per click", "points per click + " . i2s(\
  s2i({items.substring({pointer.get}, 0, 0, effect_displace)}, 0)\
))}
{item.set("effect per second", "points per second + " . i2s(\
  s2i({items.substring({pointer.get}, 1, 0, effect_displace)}, \
  0)\
))}
{item.set("cost", "cost = " . i2s(\
  s2i({items.substring({pointer.get}, 2, 0, price_displace)}, 0)\
))}

